/* 

    Packages : {
        Breeze, Intervention,EasyZoom,
    }

*/


1. Lets install laravel.
2. Lets install breeze in project for authentication.
3. Lets Merge Admin dashboard;
4. Lets Make Admin & Vendor dataTables in database + Model for both admin & vendor;
5. Lets Make Auth for admin login with the help of breeze.So that no can see dashboard without login in to it; And Beside this lets have a logout option from dashboard and redirect admin to login page;
6. Lets do authentication of admin login page;
7. In dashboard lets have admin settings option.and from there lets change admin password;

8. Lets change admin details as well from settings;
9. Lets update admin image with the help of intervention package;

// Lets work with vendor

10. Lets make vendor,vendorbusinessdetail & vendorBankDetail 3 model + database;
11. Lets update 3 model + database of (10)no. from vendor dashboard;
12. Lets fetch all admin details in admin dashboard;
13. Lets see vendors all details from admin dashboard;
14. Lets manage admin status from admin dashboard;
15. Lets make countries database and with the help of this database lets select vendor's country + vendor's shop country;
27 . Lets make vendor registration with email verification.
28. Lets have admin to approve vendor id and let them allow to add products and show only those products whom are added by this vendor;


// Again Admin Work
16. Lets create section datatable + model and show it in admin dashboard.In Section module lets have sections,category and product option;
17. In section database lets put data with seeder and fetch them in dashboard section option and manage the status of every section + lets have datatable option in section table,so that we can search items easily;
18. Lets do crud of section module;
19. Lets do crud of category module with subcategory as well;
    19.1: Every Category is under Section.So thats why lets make relation between category and section in Category model.
    19.2: Every Subcategory is under Category.So thats why lets make relation between category and subcategory with the help of parentcategory option.
    19.3: For Select subcategory lets have the help of ajax;

20. Lets do crud of brand module;
21. Lets do crud of product module;
    21.1: for find all section category subcategory lets make relation between section & category in Section model;

    
22. Lets have product attribute module and crud it;
23. Lets have product images module and crud it.With the help of this module lets have multiple image of product.
24. Lets have banner section in admin dashboard & do crud it;
25. Lets have product filter so that customer can find his products easily.For that lets have 2 db table call product filter & product filter value. And crud them with the help of FilterController;
26. Now lets have those filter columns in product table and select every column's data by select option while we add a new product in db;



// Lets work with frontend
1. Lets merge frontend template;
2. Fetch all section category subcategory and show them in home page;
3. Fetch all banner and show them in home page;
4. Lets fetch New Arrivals products in home page;
5. Lets fetch Best Seller products in home page;
6. Lets fetch Discounted products in home page;
7. Lets fetch featured products in home page;
8. Lets listing products by its category subcategories in frontend.With the help of url;
9. Lets filter product by sort of highest price low price new products with and without ajax;
10. Lets filter product by color size price filter value
11. Lets make product details page and show each and every details of all products.
    11.1. Lets filter product price with product size by fetching data from product attribute via ajax;
    11.2. Lets show product filter values in product details page.
    11.3. Lets zoom product images in details page with easyZoom Package.
    11.4. Lets Connect Vendor with Product model with belongs to relation and lets connect vendor and vendorbussinessdetails so that we ll get vendor all details and we'll show vendor shop name in product details page if those products are added by vendor.
    11.5. Lets show similar kind of products in details page. Similar products will fetch by which brand type products details are showing;
    11.6. Lets show recently visited products with the help of recently_visited_products table..where by clicking  product database gonna fetch product_id and session_id and store them in DB.And then those products will be shown in recently visited products option.
    Databse Field Name:
    product_id, session_id
    
12. Lets make vendor products page and fetch all products which are added by one vendor;

13. Lets Make Cart option.User can add product to the cart with the help of cart model and db.
    Database Field Name:
        session_id,user_id,product_id,size,quantity

    13.1. First of all lets fetch product details from product attribute with product_id and fetch product stock by size.
    13.2. controller->cart function lets check is the stock > quantity or not.if its true then add the product in cart db or else not.
    13.3 If user is not logged in then then we will recieve the item in cart with session id;
    13.4 Lets have a cart page and we'll show all products who have added to cart.for getting all products details lets have a belongs to function in cart model with product model with the help of product_id;
    13.5 Lets update Cart items quantity with the help of ajax.Update cart db quantity field as well;
    13.6 Lets filter cart item with product stock..if customer add item qty more then product stock then it will show a alert msg + if admin off the product size status to 0 then also customer will saw a alert message that this size is not available
    13.7 Lets delete the cart item from cart page with the help of ajax; 

    // User Login registration
    14.1 Lets have a users table in db and put those data field:
        name,address,city,state,country,mobile,email,pincode,password,status
    14.2 Lets make login register page for user in frontend.
    14.3 Lets register user in database with the help of ajax.So that it will not refresh while user submit his/her details from register form.
    14.4 Lets validate our register form with the help of ajax.
    14.5 Lets give a welcome email to the users who have registered in the website.

    14.6 You can send welcome message to our customer via laravel sms packages in there personal mobile number.

    14.7 Now lets make login option and lets have login option for users.For login as well we'll use ajax for first load.
    14.8 If user add cart without register or login to the side & after adding product to the cart if they register or login to the site then we will check session id and user id and we'll put the new register or logged in users id to the cart user_id field of the database;

    14.9 Before giving new registerd user a welcome message lets give them a confirmation email.By clicking this email there account will be activate. Until then the registration will not be 100% completed.

    14.10 After confirming the email user will be redirect to the login page and a welcome email will also come to his/her email as well.

    14.11 While user submit register button lets have a loader until user get the confirmation email.

    14.12 Lets add forgot password option for users and let them have there password using the email address they have been used during register.

    14.13 Lets have my account page for user and from there lets update user details like name address city etc.

    14.14 Lets have Auth protection for user account so that without login no one can go to user/account page.


    15. Lets have a helper.For that create folder in app..add helper.php under it..go to composer.json add this file in autoload and from terminal play composer dump-autoload. 

    15.1 With the help of helper lets update cart items.lets have a cart item function in helper and fetch it in header for cart item update and for ajax lets call this function in update and delete cart function in controller and js file.

    15.2 Lets Show cart items in mini cart bar of header with the help of helper and ajax.


    16. Lets Make Coupon option in website:

    16.1 Lets create a table in database:
        ('vendor_id');('coupon_option');('coupon_code');('categories');('brands');('users');('coupon_type');('amount_type');('amount');('expiry_date');('status');
    
    16.2 Lets add some dummy data in it with the help of seeder && lets make coupon model and admin coupon controller
    16.3 Lets fetch coupons table data in admin panel and work with status active inactive and delete coupon.

    16.3 Lets create add edit form for coupon.
    16.4 For automatic generate coupon code lets use str_random() function and for use it lets install: composer require laravel/helpers
    16.5 Lets add data in database with add coupon form and fetch them in admin panel.
    16.6 Lets Update coupon's from the admin panel.
    16.7 Lets check coupon status active or not, expiry date is gone or not, is coupon is for selected category or not, coupon is for user or not, if not then show error message, if vendor add any coupon then it'll be only usable in that products whom added by this vendor.
    16.8 Lets use coupon in cart item and make discount as coupon amount type fixed or percentage.
     
    17. Lets Fetch all users info from database to admin panel

    // Checkout

    18.1. Lets make delivery_addresses db_table model and fill the table with those field name:
        $table->integer('user_id');$table->string('name');$table->string('address');$table->string('city');$table->string('state');$table->string('country');$table->string('pincode');$table->string('mobile');$table->tinyInteger('status');
        Lets have some dummy data with seeder.

    18.2. If user has delivery_addresses then lets show them in checkout page.If not then lets show add address option in checkout page.
    18.3 With the help of ajax lets fetch all info of user from delivery_Addresses table for edit address data.
    18.4 Lets Update Delivery Address with the help of ajax.
    18.5 Lets add and remove delivery address with the help of ajax.
    18.9 Lets do validation of delivery_Addresses add edit form.
    18.10 Lets fetch all data from cart in checkout page for see product name and price details + lets have payment option and delivery_addresses select option in it.If everything ok then lets redirect to order placement.

    // Order Placement:
    19.1 Lets have orders table and model in project and in db_table field:

     $table->integer('user_id');$table->string('name');$table->string('address');$table->string('city');$table->string('state');$table->string('country');$table->string('pincode');$table->string('mobile');$table->string('email');$table->float('shipping_charges');$table->string('coupon_code');$table->float('coupon_amount');$table->string('order_status');$table->string('payment_method');$table->string('payment_gateway');$table->float('grand_total');

    19.2 Lets have orders_products table and model in project and in db_field:

        $table->integer('order_id');$table->integer('user_id');$table->integer('vendor_id');$table->integer('admin_id');$table->integer('product_id');$table->string('product_code');$table->string('product_name');$table->string('product_color');$table->string('product_size');$table->float('product_price');$table->integer('product_qty');

    19.3 Lets place an order with cash on delivery option and fill up both data table at a same time.For this lets use DB::beginTransaction() and DB::commit() and have codes for entering data in dataTables between this.

    19.4 Lets show a thanks page if user do checkout successfully and order being published + lets delete this item from cart.


    // User Orders details
    20. Lets make a order page for user under auth::middleware so that without login no one gonna see it.
    20.1 In order controller let's fetch all order of this user from Order model.
    20.2 In order model lets create a function and here lets create hasMany method with orders_products model  and use order_id as a key.
    20.3 Lets make order details page and fetch every order by its order_id.And in this page lets fetch order details,product details,delivery addresses.
    20.4 Lets have product image on order details page as well.for that lets make a function in product modal so that we can fetch the image of particular product

    20.5 Lets show orders in admin panel & the products added by vendors show those products order details in there dashboard.They will only see order details about which product they have been added in the website.

    20.6 Lets show orders details page in admin panel.Where admin can see Order details,customer details,delivery addresses,update order status,ordered products full details product name code image color qty etc.